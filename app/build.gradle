plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'realm-android'
    id 'dagger.hilt.android.plugin'
    id "kotlinx-serialization"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.assignment.githubapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", 'REALM_DB_NAME', '"GitHubApp.realm"'
        buildConfigField "long", 'REALM_DB_VERSION', '1'
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [appName: "GitHub App"]

            buildConfigField "String", 'REMOTE_BASE_URL', '"https://api.github.com/"'

            resValue "string", "name_of_app", "GitHub App"
        }
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix = "-debug"
            manifestPlaceholders = [appName: "@string/app_name"]

            buildConfigField "String", 'REMOTE_BASE_URL', '"https://api.github.com/"'

            resValue "string", "name_of_app", "GitHub App DEBUG"
        }
    }

    flavorDimensions "type"
    productFlavors {
        free {
            dimension "type"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }
        paid {
            dimension "type"
            applicationIdSuffix ".paid"
            versionNameSuffix "-paid"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = [variant.mergedFlavor.applicationId, variant.buildType.applicationIdSuffix].findAll().join()
            def SEP = "_"
            def buildType = variant.buildType.name
            def version = variant.versionName
            def branch = gitBranch()

            def newApkName = project + SEP + buildType + SEP + branch + SEP + version + ".apk"

            outputFileName = new File(newApkName)
        }
    }
}

static def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // For compose screen preview, for building release it will be automatically removed
    debugImplementation "androidx.compose.ui:ui-tooling:1.0.5"
    debugImplementation "androidx.compose.ui:ui-tooling-preview:1.0.5"

    // Test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$androidx_navigation_version"
    implementation "androidx.navigation:navigation-compose:$androidx_navigation_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_version"

    //Accompanist
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_systemUI"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_view_model_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"

    // Retrofit + OKHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"

    // Kotlin serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlin_serialization_version")
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlin_serialization_version"
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")

    // Pager
    implementation "com.google.accompanist:accompanist-pager:$accompanist_pagger_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_pagger_version"

    //Coil - for images
    implementation("io.coil-kt:coil-compose:$coil_version")

    //Lottie
    implementation "com.airbnb.android:lottie-compose:$lottie_verion"

    //Chrome custom tabs
    implementation "androidx.browser:browser:$chrome_custom_tabs_version"
}